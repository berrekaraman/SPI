library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
use ieee.numeric_std.all;
use ieee.numeric_std_unsigned;

entity slave is
port(
i_sys_clk         : in std_logic                             ;
i_spi_clk         : in std_logic  :='0'                      ;

o_miso            : out std_logic :='0'                      ;
i_mosi            : in std_logic                             ;                         
i_write_bus       : in std_logic_vector(7 downto 0)          ;
o_read_bus        : out std_logic_vector(7 downto 0):=x"00"  ;               
              
i_we              : in  std_logic                            ; 
i_re              : in  std_logic                         
                                           
);
end slave;

architecture Behavioral of slave is
      
signal r_tx: std_logic_vector(7 downto 0)   :=x"00"    ;
signal r_rx : std_logic_vector(7 downto 0)  :=x"00"    ;
signal s_busy: std_logic:='0'                          ;
signal s_done: std_logic:='0'                          ; 
signal cntr: integer:=0                                ; 
--signal s_temp_s_clk: std_logic:='0'                  ;
--signal s_clk_divider: integer                        ; 
--signal s_divider: integer:=2                         ; 
begin

----------------user_logic---------------------------
process(i_sys_clk)
begin 
if falling_edge(i_sys_clk) then 
       
         if i_we='1' then              
             r_tx<=i_write_bus; 
             s_done<='1';                     
         end if;
   
         if i_re='1'then         
             o_read_bus<=r_rx;
                   
         end if;
  
end if;   
end process;

-------------------master-slave-------------------------------
process(i_spi_clk)

begin 
if falling_edge(i_spi_clk) then
       	        
        if cntr<7 then               
            o_miso<=r_tx(cntr+1);               
            r_rx(cntr)<=i_mosi; 
            cntr<=cntr+1;
            
        elsif cntr=7 then     
            o_miso<='0';               
            r_rx(7)<=i_mosi;              
            if s_busy<='1' then 
            cntr<=0;
            else
            cntr<=7;
            end if;
             
        end if;
          

end if;
end process;

end Behavioral;	
